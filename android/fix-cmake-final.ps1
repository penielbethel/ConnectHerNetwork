# Final CMake path fix script - completely regenerates the Android-rncli.cmake file
# This ensures all paths are properly quoted and formatted

param(
    [string]$CmakeFile = "app\build\generated\rncli\src\main\jni\Android-rncli.cmake"
)

Write-Host "Applying final fix to CMake paths in $CmakeFile..."

# Check if the file exists
if (-not (Test-Path $CmakeFile)) {
    Write-Host "CMake file not found: $CmakeFile"
    exit 1
}

# Read the original content
$originalContent = Get-Content $CmakeFile -Raw

# Extract the header and footer
$headerLines = @(
    "# This code was generated by [React Native CLI](https://www.npmjs.com/package/@react-native-community/cli)",
    "",
    "cmake_minimum_required(VERSION 3.13)",
    "set(CMAKE_VERBOSE_MAKEFILE on)",
    ""
)

# Define the library mappings with proper paths
$libraryMappings = @{
    "react_codegen_RNVectorIconsSpec" = "C:/Users/penie/Pbmultitechs/CLIENTS/WEBPAGES AND APK DEVELOPMENT/connecthermobile app/node_modules/react-native-vector-icons/android/build/generated/source/codegen/jni/"
    "react_codegen_rnasyncstorage" = "C:/Users/penie/Pbmultitechs/CLIENTS/WEBPAGES AND APK DEVELOPMENT/connecthermobile app/node_modules/@react-native-async-storage/async-storage/android/build/generated/source/codegen/jni/"
    "react_codegen_rndocumentpicker" = "C:/Users/penie/Pbmultitechs/CLIENTS/WEBPAGES AND APK DEVELOPMENT/connecthermobile app/node_modules/react-native-document-picker/android/build/generated/source/codegen/jni/"
    "react_codegen_rngesturehandler_codegen" = "C:/Users/penie/Pbmultitechs/CLIENTS/WEBPAGES AND APK DEVELOPMENT/connecthermobile app/node_modules/react-native-gesture-handler/android/build/generated/source/codegen/jni/"
    "react_codegen_RNImagePickerSpec" = "C:/Users/penie/Pbmultitechs/CLIENTS/WEBPAGES AND APK DEVELOPMENT/connecthermobile app/node_modules/react-native-image-picker/android/build/generated/source/codegen/jni/"
    "react_codegen_RNPermissionsSpec" = "C:/Users/penie/Pbmultitechs/CLIENTS/WEBPAGES AND APK DEVELOPMENT/connecthermobile app/node_modules/react-native-permissions/android/build/generated/source/codegen/jni/"
    "react_codegen_safeareacontext" = "C:/Users/penie/Pbmultitechs/CLIENTS/WEBPAGES AND APK DEVELOPMENT/connecthermobile app/node_modules/react-native-safe-area-context/android/src/main/jni/"
    "react_codegen_rnscreens" = "C:/Users/penie/Pbmultitechs/CLIENTS/WEBPAGES AND APK DEVELOPMENT/connecthermobile app/node_modules/react-native-screens/android/src/main/jni/"
}

# Generate add_subdirectory commands with proper quoting
$addSubdirectoryLines = @()
$libraryNames = @()

foreach ($library in $libraryMappings.GetEnumerator()) {
    $targetName = $library.Key -replace "react_codegen_", ""
    if ($targetName -eq "RNVectorIconsSpec") { $targetName = "RNVectorIconsSpec_autolinked_build" }
    elseif ($targetName -eq "rnasyncstorage") { $targetName = "rnasyncstorage_autolinked_build" }
    elseif ($targetName -eq "rndocumentpicker") { $targetName = "rndocumentpicker_autolinked_build" }
    elseif ($targetName -eq "rngesturehandler_codegen") { $targetName = "rngesturehandler_codegen_autolinked_build" }
    elseif ($targetName -eq "RNImagePickerSpec") { $targetName = "RNImagePickerSpec_autolinked_build" }
    elseif ($targetName -eq "RNPermissionsSpec") { $targetName = "RNPermissionsSpec_autolinked_build" }
    elseif ($targetName -eq "safeareacontext") { $targetName = "safeareacontext_autolinked_build" }
    elseif ($targetName -eq "rnscreens") { $targetName = "rnscreens_autolinked_build" }
    
    $addSubdirectoryLines += "add_subdirectory(`"$($library.Value)`" $targetName)"
    $libraryNames += $library.Key
}

# Generate the AUTOLINKED_LIBRARIES section
$autolinkSection = @(
    "",
    "set(AUTOLINKED_LIBRARIES"
)
foreach ($libName in $libraryNames) {
    $autolinkSection += "  $libName"
}
$autolinkSection += ")"

# Combine all sections
$newContent = $headerLines + $addSubdirectoryLines + $autolinkSection

# Write the new content to the file
$newContent | Set-Content -Path $CmakeFile -Encoding UTF8

Write-Host "CMake file regenerated successfully!"
Write-Host "`nFirst 10 lines of the new file:"
Get-Content $CmakeFile | Select-Object -First 10